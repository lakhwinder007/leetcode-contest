 bool solve(vector<int>&nums,int ind,vector<int>&dp){
          int n=nums.size();
                if(ind==nums.size())return true;
          if(dp[ind]!=-1)return dp[ind];
          int rem=n-ind;            // no of elements left after  partition
          if(rem<2)return dp[ind]=false;
          else if(rem==2){
               if(nums[ind]==nums[ind+1])return dp[ind]=true;
               else return dp[ind]=false;
          }
          else {
                   if(nums[ind]==nums[ind+1]){
                      if(solve(nums,ind+2,dp))return dp[ind]=true;
                   }
              if(nums[ind]==nums[ind+1]  &&  nums[ind]==nums[ind+2]){

                    if(solve(nums,ind+3,dp))return dp[ind]=true;
              }
              if(nums[ind+1]==nums[ind]+1  &&  nums[ind]+2==nums[ind+2]){
                         if(solve(nums,ind+3,dp))return dp[ind]=true;
              }
              
          }
          return dp[ind]=false;
}
    bool validPartition(vector<int>& nums) {
        vector<int>dp(nums.size(),-1);
        return solve(nums,0,dp);
    }
